{
    "trial": 2,
    "fold": 4,
    "epoch": 29,
    "val_acc": 0.3,
    "val_f1": 0.16111111111111112,
    "per_class_f1": {
        "1 (FACING camera) Sit and stand": 0.0,
        "10 Slow walk (SHAKING hands/body, tiny step, head forward)": 0.4444444444444444,
        "2 (FACING camera) both hands SHAKING (sitting position)": 0.5555555555555556,
        "3 Stand up from chair - both hands with SHAKING": 0.0,
        "4 (Sideway) Sit & stand": 0.0,
        "5 (Sideway) both hands SHAKING (sitting)": 0.0,
        "6 (Sideway) STAND up with - both hands SHAKING": 0.0,
        "7 Cool down - sitting/relax": 0.0,
        "8 Walk (LEFT --> Right --> Left)": 0.0,
        "9 Walk & STOP/frozen, full body shaking, rotate then return back": 0.16666666666666666
    },
    "hyperparameters": {
        "d_model": 128,
        "num_heads": 2,
        "num_layers": 1,
        "dropout": 0.20882145849935793,
        "embedding_dim": 64,
        "learning_rate": 0.008068745706108283,
        "batch_size": 8
    },
    "num_parameters": 154378,
    "model_architecture": "ActivityTransformer(\n  (subject_embedding): Embedding(10, 64)\n  (input_proj): Linear(in_features=103, out_features=128, bias=True)\n  (transformer_encoder): TransformerEncoder(\n    (layers): ModuleList(\n      (0): TransformerEncoderLayer(\n        (self_attn): MultiheadAttention(\n          (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)\n        )\n        (linear1): Linear(in_features=128, out_features=256, bias=True)\n        (dropout): Dropout(p=0.20882145849935793, inplace=False)\n        (linear2): Linear(in_features=256, out_features=128, bias=True)\n        (norm1): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n        (norm2): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n        (dropout1): Dropout(p=0.20882145849935793, inplace=False)\n        (dropout2): Dropout(p=0.20882145849935793, inplace=False)\n      )\n    )\n  )\n  (classifier): Linear(in_features=128, out_features=10, bias=True)\n)"
}